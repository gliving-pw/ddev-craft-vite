var l=Object.defineProperty;var i=(s,t,e)=>t in s?l(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var r=(s,t,e)=>(i(s,typeof t!="symbol"?t+"":t,e),e);class h extends HTMLElement{constructor(){super();r(this,"select");r(this,"errorEl");r(this,"hasValue",()=>{this.select.value.length?this.select.classList.add("has-value"):this.select.classList.remove("has-value")});r(this,"handleBlur",()=>{this.validate()});r(this,"handleInput",this.clearError.bind(this));this.select=this.querySelector("select");const e=document.createElement("p");e.className="error",e.style.display="none",this.errorEl=e,this.appendChild(this.errorEl)}validate(){this.hasValue();let e=!0;return this.select.required?this.select.value===""?(e=!1,this.getAttribute("state")!=="invalid"&&this.reportError("This field is required.")):this.clearError():this.clearError(),e}reportError(e){this.errorEl.innerHTML=e,this.errorEl.style.display="block",this.setAttribute("state","invalid")}clearError(){this.errorEl.style.display="none",this.setAttribute("state","valid")}connectedCallback(){this.select.addEventListener("change",this.handleInput),this.select.addEventListener("blur",this.handleBlur)}}export{h as default};
