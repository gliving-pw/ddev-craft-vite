!function(){function t(t,i,e){return i in t?Object.defineProperty(t,i,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[i]=e,t}System.register([],(function(i){"use strict";return{execute:function(){class e extends HTMLElement{constructor(){super(),t(this,"input",void 0),t(this,"textEl",void 0),t(this,"errorEl",void 0),t(this,"button",void 0),t(this,"visibleIcon",void 0),t(this,"hiddenIcon",void 0),t(this,"handleBlur",(()=>{this.validate()})),t(this,"handleInput",this.clearError.bind(this)),t(this,"handleClick",(()=>{"password"===this.input.type?(this.input.type="text",this.visibleIcon.style.display="none",this.hiddenIcon.style.display="block"):(this.input.type="password",this.visibleIcon.style.display="block",this.hiddenIcon.style.display="none")})),this.input=this.querySelector("input"),this.textEl=this.querySelector("p");const i=document.createElement("p");i.className="error",i.style.display="none",this.insertBefore(i,this.input),this.errorEl=i,this.button=this.querySelector("button"),this.visibleIcon=this.querySelector(".js-visible"),this.hiddenIcon=this.querySelector(".js-hidden")}validate(){let t=!0;return this.input.required?""===this.input.value?(t=!1,"invalid"!==this.getAttribute("state")&&this.reportError("This field is required.")):new RegExp(/^[0-9]+$/).test(this.input.value)?this.input.minLength||this.input.maxLength?this.input.minLength?this.input.minLength>this.input.value.length?(t=!1,this.reportError(`Pins must be at least ${this.input.minLength} numbers.`)):this.clearError():this.input.maxLength<this.input.value.length?(t=!1,this.reportError(`Pins cannot be more than ${this.input.maxLength} numbers.`)):this.clearError():this.clearError():(t=!1,"invalid"!==this.getAttribute("state")&&this.reportError("Invalid pin format.")):this.clearError(),t}reportError(t){this.errorEl.innerHTML=t,this.errorEl.style.display="block",this.textEl&&(this.textEl.style.display="none"),this.setAttribute("state","invalid")}clearError(){this.errorEl.style.display="none",this.textEl&&(this.textEl.style.display="block"),this.setAttribute("state","valid")}connectedCallback(){this.input.addEventListener("input",this.handleInput),this.input.addEventListener("blur",this.handleBlur),this.button.addEventListener("click",this.handleClick)}}i("default",e)}}}))}();
