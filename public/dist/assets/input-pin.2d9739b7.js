var r=Object.defineProperty;var n=(s,i,t)=>i in s?r(s,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[i]=t;var e=(s,i,t)=>(n(s,typeof i!="symbol"?i+"":i,t),t);class h extends HTMLElement{constructor(){super();e(this,"input");e(this,"textEl");e(this,"errorEl");e(this,"button");e(this,"visibleIcon");e(this,"hiddenIcon");e(this,"handleBlur",()=>{this.validate()});e(this,"handleInput",this.clearError.bind(this));e(this,"handleClick",()=>{this.input.type==="password"?(this.input.type="text",this.visibleIcon.style.display="none",this.hiddenIcon.style.display="block"):(this.input.type="password",this.visibleIcon.style.display="block",this.hiddenIcon.style.display="none")});this.input=this.querySelector("input"),this.textEl=this.querySelector("p");const t=document.createElement("p");t.className="error",t.style.display="none",this.insertBefore(t,this.input),this.errorEl=t,this.button=this.querySelector("button"),this.visibleIcon=this.querySelector(".js-visible"),this.hiddenIcon=this.querySelector(".js-hidden")}validate(){let t=!0;return this.input.required?this.input.value===""?(t=!1,this.getAttribute("state")!=="invalid"&&this.reportError("This field is required.")):new RegExp(/^[0-9]+$/).test(this.input.value)?this.input.minLength||this.input.maxLength?this.input.minLength?this.input.minLength>this.input.value.length?(t=!1,this.reportError(`Pins must be at least ${this.input.minLength} numbers.`)):this.clearError():this.input.maxLength<this.input.value.length?(t=!1,this.reportError(`Pins cannot be more than ${this.input.maxLength} numbers.`)):this.clearError():this.clearError():(t=!1,this.getAttribute("state")!=="invalid"&&this.reportError("Invalid pin format.")):this.clearError(),t}reportError(t){this.errorEl.innerHTML=t,this.errorEl.style.display="block",this.textEl&&(this.textEl.style.display="none"),this.setAttribute("state","invalid")}clearError(){this.errorEl.style.display="none",this.textEl&&(this.textEl.style.display="block"),this.setAttribute("state","valid")}connectedCallback(){this.input.addEventListener("input",this.handleInput),this.input.addEventListener("blur",this.handleBlur),this.button.addEventListener("click",this.handleClick)}}export{h as default};
